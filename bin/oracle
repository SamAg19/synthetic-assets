#! /usr/bin/env node

const _ = require('lodash')
const axios = require('axios')
const Web3 = require('web3')

const { FROM_ADDRESS } = process.env

if (!FROM_ADDRESS) {
  throw new Error('Set FROM_ADDRESS=0x...')
}

let count = 0
const OracleBuild = require('../build/contracts/Oracle.json')
const web3 = new Web3('ws://localhost:8545')

const Oracle = new web3.eth.Contract(OracleBuild.abi, OracleBuild.networks['420'].address)

Oracle.events.Requested(async (err, event) => {
  if (err) {
    return
  }

  count++
  const { id, url, selector } = event.returnValues
  console.log(`[${count}]`, '🙏🏻', '\t', url, '\t', selector)

  const response = await axios.get(url)
  const value = Math.round(_.get(response.data, selector))

  console.log(`[${count}]`, '✍🏻', '\t', value, '\t', (await Oracle.methods.fulfil(id, value).send({
    from: FROM_ADDRESS
  })).transactionHash)

  console.log(`[${count}]`, '🔏', '\t', await Oracle.methods.read(id).call())
})

console.log('Watching for requests...')
