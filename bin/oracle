#! /usr/bin/env node

const _ = require('lodash')
const axios = require('axios')
const Web3 = require('web3')
const KrakenClient = require('kraken-api')

const { FROM_ADDRESS } = process.env

if (!FROM_ADDRESS) {
  throw new Error('Set FROM_ADDRESS=0x...')
}

let count = 0
const kraken = new KrakenClient()
const OracleBuild = require('../build/contracts/Oracle.json')
const web3 = new Web3('ws://localhost:8545')

const _1e18 = new web3.utils.BN('1000000000000000000')
const Oracle = new web3.eth.Contract(OracleBuild.abi, OracleBuild.networks['420'].address)

Oracle.events.Requested(async (err, event) => {
  if (err) {
    return
  }

  count++
  const { id, url, selector } = event.returnValues
  console.log(`[${count}]`, '🙏🏻', '\t', url, '\t', selector)

  const response = await axios.get(url)
  let value = _.get(response.data, selector)

  value = new web3.utils.BN(Math.floor(value))

  let prr = await kraken.api('Ticker', { pair: 'XETHZUSD' })
  prr = Math.floor(prr.result.XETHZUSD.c[0])

  prr = new web3.utils.BN(prr)
  value = value.mul(_1e18)
  value = value.div(prr)

  console.log(`[${count}]`, '✍🏻', '\t', value.toString(), '\t', (await Oracle.methods.fulfil(id, web3.utils.numberToHex(value)).send({
    from: FROM_ADDRESS
  })).transactionHash)

  console.log(`[${count}]`, '🔏', '\t', await Oracle.methods.read(id).call())
})

console.log('Watching for requests...')
